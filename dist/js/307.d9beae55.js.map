{"version":3,"file":"js/307.d9beae55.js","mappings":"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","sources":["webpack://minible/./src/views/pages/usuarios/create.vue","webpack://minible/./src/views/pages/usuarios/create.vue?e39e"],"sourcesContent":["<script>\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nimport { required } from \"@vuelidate/validators\";\r\nimport Multiselect from \"@vueform/multiselect\";\r\nimport Layout from \"../../layouts/main\";\r\nimport PageHeader from \"@/components/page-header\";\r\n/**\r\n * Register component\r\n */\r\nexport default {\r\n  components: { \r\n        Multiselect,\r\n        Layout,\r\n        PageHeader\r\n    },\r\n  setup() {\r\n    return { v$: useVuelidate() };\r\n  },\r\n  data() {\r\n    return {\r\n      user: {\r\n        username: \"user.name\",\r\n        password: \"\",\r\n        role_id : \"\",\r\n      },\r\n      roles: [],\r\n      submitted: false,\r\n      tryingToRegister: false,\r\n      isRegisterError: false,\r\n      title: \"NUEVO USUARIO\"\r\n    };\r\n  },\r\n  validations: {\r\n    user: {\r\n      username: {\r\n        required\r\n      },\r\n      password: {\r\n        required\r\n      },\r\n      role_id: { \r\n        required\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    notification() {\r\n      return this.$store ? this.$store.state.notification : null;\r\n    },\r\n    notificationAutoCloseDuration() {\r\n      return this.$store && this.$store.state.notification ? 5 : 0;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getRol();\r\n  },\r\n  methods: {\r\n    async getRol(){\r\n      try {\r\n        const response = await this.$http.get(this.$apiURL + 'role/all');\r\n        const rolesData = response.data.data;\r\n            rolesData.forEach(role => {\r\n                this.roles.push(role);\r\n            });\r\n            console.log(this.roles)\r\n    } catch (error) {\r\n        console.error('Error fetching roles:', error);\r\n    }\r\n    },\r\n    // Try to register the user in with the email, username\r\n    // and password they provided.\r\n    tryToRegisterIn() {\r\n      this.submitted = true;\r\n      // stop here if form is invalid\r\n      this.v$.$touch();\r\n\r\n      if (this.v$.$invalid) {\r\n        return;\r\n      } else {\r\n          const { username, password } = this.user;\r\n          if (username && password) {\r\n            this.$http.post(this.$apiURL+'user/store', this.user, {\r\n            }).then(response => {\r\n                if(response.status == 200){                  \r\n                  this.$swal({\r\n                      title: 'Completado!',\r\n                      text:  response.data.message,\r\n                      icon: 'success',\r\n                      confirmButtonColor: '#6457A2', // Cambiar el color del botón de confirmación\r\n                  });\r\n                  setTimeout(() => {\r\n                        window.location.reload();\r\n                    }, 2000);\r\n                }\r\n            }).catch(error => {\r\n                console.error(error);\r\n                  this.$swal({\r\n                    icon: \"error\",\r\n                    title: \"Oops...\",\r\n                    text: error,\r\n                  });\r\n            });\r\n          }\r\n          \r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n    <Layout>\r\n    <PageHeader :title=\"title\" :items=\"items\" />\r\n    <BRow>\r\n        <BCol cols=\"12\">\r\n            <BCard no-body>\r\n                <BCardBody>\r\n                    <BCardTitle>Registrar usuario</BCardTitle>\r\n                        <form autocomplete=\"off\"\r\n                            class=\"row no-gutters\"\r\n                            @submit.prevent=\"submit\">\r\n                        <BRow>\r\n                            <BCol lg=\"4\">\r\n                                <div class=\"mt-4\">\r\n                                    <BFormGroup\r\n                                        id=\"email-group\"\r\n                                        label=\"Usuario\"\r\n                                        class=\"mb-3\"\r\n                                        label-for=\"username\">\r\n                                        <BFormInput\r\n                                            id=\"username\"\r\n                                            v-model=\"user.username\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"Ingresar usuario\"\r\n                                            :class=\"{\r\n                                            'is-invalid': submitted && v$.user.username.$error\r\n                                            }\"\r\n                                        ></BFormInput>\r\n                                        <div v-if=\"submitted && v$.user.username.required.$invalid\"\r\n                                            class=\"invalid-feedback\">\r\n                                            Usuario es requerido.\r\n                                        </div>\r\n                                    </BFormGroup>\r\n                                </div>\r\n                            </BCol>\r\n                            <BCol lg=\"4\">\r\n                                <div class=\"mt-4\">\r\n                                    <BFormGroup\r\n                                        id=\"password-group\"\r\n                                        label=\"Contraseña\"\r\n                                        class=\"mb-3\"\r\n                                        label-for=\"password\"\r\n                                        >\r\n                                        <BFormInput\r\n                                            id=\"password\"\r\n                                            v-model=\"user.password\"\r\n                                            type=\"password\"\r\n                                            placeholder=\"Ingresar contraseña\"\r\n                                            :class=\"{\r\n                                            'is-invalid': submitted && v$.user.password.$error\r\n                                            }\"\r\n                                        ></BFormInput>\r\n                                        <div\r\n                                            v-if=\"submitted && v$.user.password.required.$invalid\"\r\n                                            class=\"invalid-feedback\"\r\n                                        >\r\n                                            Contraseña es requerida.\r\n                                        </div>\r\n                                    </BFormGroup>\r\n                                </div>\r\n                            </BCol>\r\n                            <BCol lg=\"4\">\r\n                                <div class=\"mt-4\">\r\n                                    <BFormGroup\r\n                                        label=\"Rol\"\r\n                                        label-for=\"formrow-firstname-input\"\r\n                                        class=\"mb-12\">\r\n                                        <Multiselect\r\n                                            v-model=\"user.role_id\"\r\n                                            required\r\n                                            :options=\"roles.map(role => ({ value: role.id, label: role.description }))\"\r\n                                            class=\"form-control p-0\"\r\n                                        />\r\n                                    </BFormGroup>\r\n                                </div>\r\n                            </BCol>\r\n                        </BRow>\r\n                        <div class=\"mt-3 text-end\">\r\n                            <BButton\r\n                                variant=\"primary\"\r\n                                class=\"w-sm\"\r\n                                @click=\"tryToRegisterIn\"\r\n                                >Register\r\n                            </BButton>\r\n                        </div>\r\n                    </form>\r\n                </BCardBody>\r\n            </BCard>\r\n        </BCol>\r\n    </BRow>\r\n</Layout>\r\n</template>","import { render } from \"./create.vue?vue&type=template&id=7ab37c2b\"\nimport script from \"./create.vue?vue&type=script&lang=js\"\nexport * from \"./create.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","key","_createBlock","_component_Layout","default","_withCtx","_createVNode","_component_PageHeader","title","$data","items","_ctx","_component_BRow","_component_BCol","cols","_component_BCard","_component_BCardBody","_component_BCardTitle","_createTextVNode","_","_createElementVNode","autocomplete","onSubmit","_cache","_withModifiers","args","submit","lg","_hoisted_1","_component_BFormGroup","id","label","_component_BFormInput","modelValue","user","username","$event","type","placeholder","_normalizeClass","submitted","$setup","v$","$error","required","$invalid","_createElementBlock","_hoisted_2","_createCommentVNode","_hoisted_3","password","_hoisted_4","_hoisted_5","_component_Multiselect","role_id","options","roles","map","role","value","description","_hoisted_6","_component_BButton","variant","onClick","$options","tryToRegisterIn","components","Multiselect","Layout","PageHeader","setup","useVuelidate","data","tryingToRegister","isRegisterError","validations","computed","notification","this","$store","state","notificationAutoCloseDuration","mounted","getRol","methods","response","$http","get","$apiURL","rolesData","forEach","push","console","log","error","$touch","post","then","status","$swal","text","message","icon","confirmButtonColor","setTimeout","window","location","reload","catch","__exports__","render"],"sourceRoot":""}