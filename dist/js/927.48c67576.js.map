{"version":3,"file":"js/927.48c67576.js","mappings":"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","sources":["webpack://minible/./src/components/constructor.js","webpack://minible/./src/views/pages/Provision/index.vue","webpack://minible/./src/views/pages/Provision/index.vue?08e8"],"sourcesContent":["function constructor_chart(data_series,data_categories){\r\n    let columnChartAux = {\r\n        series: data_series,\r\n        chartOptions: {\r\n            chart: {\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: \"45%\",\r\n                    endingShape: \"rounded\",\r\n                    dataLabels: {\r\n                    position: 'top' // Establece la posición de las etiquetas de datos encima de las barras\r\n                    }\r\n                }\r\n            },\r\n            dataLabels: {\r\n            enabled: true,\r\n            offsetY: -20, // Ajusta la posición vertical de las etiquetas de datos\r\n            style: {\r\n                fontSize: '12px',\r\n                colors: ['#000']\r\n            }\r\n            },\r\n            stroke: {\r\n            show: true,\r\n            width: 2,\r\n            colors: [\"transparent\"]\r\n            },\r\n            colors: ['#10b07a', '#dc3545', '#f1b44c'],\r\n            xaxis: {\r\n            categories: data_categories\r\n            },\r\n            yaxis: {\r\n            title: {\r\n                text: \"\"\r\n            }\r\n            },\r\n            grid: {\r\n            borderColor: \"#f1f1f1\"\r\n            },\r\n            fill: {\r\n            opacity: 1\r\n            },\r\n        }\r\n    }\r\n    return columnChartAux;\r\n}\r\nfunction constructor_piechart(data_series,data_categories,colors = null){\r\n    let colors_pie =( colors == null) ?  [\"#3477C3\", \"#8F34C3\", \"#C3349A\", \"#C33459\", \"#C37534\",\"3479C3\"] : [\"#FF7F50\", \"#91cc75\", \"#ee6666\", \"#fac858\", \"#4DB6AC\",\"34C3B8\"];\r\n    let pie_chart = {\r\n        series: data_series,\r\n        chartOptions: {\r\n            labels: data_categories,\r\n            colors: colors_pie,\r\n            legend: {\r\n                show: true,\r\n                position: \"bottom\",\r\n                horizontalAlign: \"center\",\r\n                verticalAlign: \"middle\",\r\n                floating: false,\r\n                fontSize: \"14px\",\r\n                offsetX: 0,\r\n                offsetY: 10\r\n            },\r\n            responsive: [\r\n                {\r\n                    breakpoint: 600,\r\n                    options: {\r\n                    chart: {\r\n                        height: 240\r\n                    },\r\n                    legend: {\r\n                        show: false\r\n                    }\r\n                    }\r\n                }\r\n            ],\r\n            dataLabels: {\r\n                style: {\r\n                    fontSize: '14px' // Ajusta el tamaño de la fuente del porcentaje\r\n                }\r\n            },\r\n            plotOptions: {\r\n                pie: {\r\n                    dataLabels: {\r\n                        offset: -20 // Ajusta el offset para centrar las etiquetas\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return pie_chart;\r\n}\r\n\r\nfunction constructor_barchart(data_series,data_categories){\r\n    let bar_chart = {\r\n        series: [\r\n            {\r\n              data: data_series,\r\n            }\r\n        ],\r\n        chartOptions: {\r\n            chart: {\r\n                toolbar: {\r\n                show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                horizontal: true,\r\n                dataLabels: {\r\n                    position: 'bottom'\r\n                  },\r\n                distributed: false,\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            colors: ['#34c38f', '#556ee6', '#f46a6a', '#50a5f1', '#A5978B', '#2b908f', '#f9a3a4', '#90ee7e','#f48024', '#69d2e7'],\r\n            grid: {\r\n                borderColor: \"#f1f1f1\"\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    show: true\r\n                }\r\n            },\r\n            xaxis: {\r\n                categories: data_categories\r\n            }\r\n        }\r\n    }\r\n    return bar_chart;\r\n}\r\n\r\nfunction constructor_donutchart(data_series,data_categories){\r\n    let total = Number((data_series.reduce((sum, value) => sum + value, 0)).toFixed(2));\r\n    let colors = [];\r\n    for (let index = 0; index < data_categories.length; index++) {\r\n        const element = data_categories[index];\r\n        switch (element) {\r\n            case \"Lima\":\r\n                colors.push(\"#34c38f\");\r\n                break;\r\n            case \"Cuzco\":\r\n                colors.push(\"#5b73e8\");\r\n                break;\r\n            case \"Puno\":\r\n                colors.push(\"#f1b44c\");\r\n                break;\r\n            case \"Arequipa\":\r\n                colors.push(\"#50a5f1\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    let donutChart = {\r\n        series: data_series,\r\n        chartOptions: {\r\n          labels: data_categories,\r\n          colors: colors, // Utiliza los colores definidos\r\n          legend: {\r\n            show: true,\r\n            position: \"bottom\",\r\n            horizontalAlign: \"center\",\r\n            verticalAlign: \"middle\",\r\n            floating: false,\r\n            fontSize: \"14px\",\r\n            offsetX: 0,\r\n            offsetY: 10\r\n          },\r\n          responsive: [\r\n            {\r\n              breakpoint: 600,\r\n              options: {\r\n                chart: {\r\n                  height: 240\r\n                },\r\n                legend: {\r\n                  show: false\r\n                }\r\n              }\r\n            }\r\n          ],\r\n          dataLabels: {\r\n            enabled: true,\r\n            formatter: function (val, opts) {\r\n              return \"S/ \"+ opts.w.config.series[opts.seriesIndex];\r\n            },\r\n            style: {\r\n                fontSize: '14px', // Ajusta el tamaño de la fuente del porcentaje\r\n                fontweight: 'bold'\r\n            }\r\n          },\r\n          plotOptions: {\r\n            pie: {\r\n              donut: {\r\n                labels: {\r\n                  show: true,\r\n                  total: {\r\n                    show: true,\r\n                    label: 'Total',\r\n                    formatter: function () {\r\n                      return 'S/ '+total;\r\n                    }\r\n                  },\r\n                  style: {\r\n                    fontSize: '14px', // Ajusta el tamaño de la fuente del porcentaje\r\n                    fontweight: 'bold'\r\n                }\r\n                }\r\n              }\r\n            }\r\n          },\r\n        }\r\n      };\r\n    return donutChart;\r\n}\r\n\r\n\r\n\r\nexport {\r\n    constructor_chart,constructor_piechart,constructor_barchart,constructor_donutchart\r\n}","<script>\r\nimport Layout from \"../../layouts/main\";\r\nimport PageHeader from \"@/components/page-header\";\r\nimport {constructor_barchart} from \"@/components/constructor\";\r\nimport moment from 'moment';\r\n/**\r\n * Apex-chart component\r\n */\r\nexport default {\r\n    components: {\r\n        Layout,\r\n        PageHeader\r\n    },\r\n    data() {\r\n        return {\r\n            title: \"Provisiónes\",\r\n            tableDataSup: [],\r\n            tableDataTec: [],\r\n            ContrataBar: [], \r\n            GestorBar: [],\r\n            GestorAgenda: [],\r\n            GestorOrdenes: [\r\n            ],\r\n            GestorAgendaId: null,\r\n            GestorOrdenId: null,\r\n            Ciudades : [],\r\n            ciudades_form: {},\r\n            ciudadId1: null,\r\n            ciudadId2: null,\r\n            ciudadId3: null,\r\n            ciudadId4: null,\r\n            items: [\r\n                {\r\n                    text: \"Privisiones\",\r\n                }\r\n            ],\r\n            //--------------------\r\n            totalRowsSup: 1,\r\n            currentPageSup: 1,\r\n            perPageSup: 20,\r\n            pageOptionsSup: [3,10,25,50,100],\r\n            filterOnSup: [],\r\n            filterSup: null,\r\n            sortBySup: \"age\",\r\n            sortDescSup: false,\r\n            fieldsSup: [],\r\n            totalesSup : 0,\r\n            //--------------------\r\n            totalRowsTec: 1,\r\n            currentPageTec: 1,\r\n            perPageTec: 20,\r\n            pageOptionsTec: [3,10,25,50,100],\r\n            filterOnTec: [],\r\n            filterTec: null,\r\n            sortByTec: \"age\",\r\n            sortDescTec: false,\r\n            fieldsTec: [],\r\n            totalesTec : 0,\r\n            //---------------------\r\n            TecDate :null,\r\n            SupDate : null,\r\n            GestorDate: null,\r\n            ContrataDate : null,\r\n        };\r\n    },\r\n    mounted() {\r\n        // Set the initial number of items\r\n        this.totalRowsSup = this.tableDataSup.length;\r\n        this.totalRowsTec = this.tableDataTec.length;\r\n        //obtener datos de la api\r\n        this.getCity();\r\n    },\r\n    methods:{\r\n        formatearHora(value){\r\n            const date = moment(value, ['DD/MM/YYYY HH:mm:ss', 'YYYY-MM-DDTHH:mm:ss']);\r\n            if (!date.isValid()) return ': ' + value;\r\n            return date.format('HH:mm:ss');\r\n        },\r\n        onFilteredSup(filteredItems) {\r\n            // Trigger pagination to update the number of buttons/pages due to filtering\r\n            this.totalRowsSup = filteredItems.length;\r\n            this.currentPageSup = 1;\r\n        },\r\n        onFilteredTec(filteredItems) {\r\n            // Trigger pagination to update the number of buttons/pages due to filtering\r\n            this.totalRowsTec = filteredItems.length;\r\n            this.currentPageTec = 1;\r\n        },\r\n        async getContrata(){\r\n            if(this.ciudadId1 != null){\r\n                this.$nextTick(async () => {\r\n                    const TIMEOUT_MS = 7000; // Tiempo de espera en milisegundos\r\n                    const responsePromise = this.$http.get(this.$apiURL + 'provision/diarycontratagraphic/'+this.ciudadId1);\r\n                    const timeoutPromise = new Promise((resolve) => setTimeout(resolve, TIMEOUT_MS));\r\n                    const response = await Promise.race([responsePromise, timeoutPromise]);\r\n                    console.log(response)\r\n                    if (response && response !== null && 'series' in response.data && response.data.series.length>0) {\r\n                        this.ContrataBar = {... constructor_barchart(response.data.series, response.data.categories)}\r\n                        localStorage.setItem('contrata_bar_provision', JSON.stringify(response));\r\n                        this.ContrataDate = this.formatearHora(response.data.date)\r\n                    }\r\n                    else{\r\n                        const currentData = JSON.parse(localStorage.getItem('contrata_bar_provision')); // Convertir los datos del usuario a JSON\r\n                        if(currentData){\r\n                            this.ContrataBar = {... constructor_barchart(currentData.data.series, currentData.data.categories)}\r\n                            this.ContrataDate = this.formatearHora(currentData.data.date)\r\n                        }\r\n                        else{\r\n                            this.ContrataBar = {... constructor_barchart([],[])}\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else{\r\n                this.ContrataBar = {... constructor_barchart([],[])}\r\n            }\r\n\r\n        },\r\n        async getGestor() {\r\n            try {\r\n                if(this.ciudadId2 != null){\r\n                    this.$nextTick(async () => {\r\n                        const TIMEOUT_MS = 7000; // Tiempo de espera en milisegundos\r\n                        const responsePromise = this.$http.get(this.$apiURL + 'provision/diarymanagergraphic/'+this.ciudadId2);\r\n                        const timeoutPromise = new Promise((resolve) => setTimeout(resolve, TIMEOUT_MS));\r\n                        const response = await Promise.race([responsePromise, timeoutPromise]);\r\n                        if (response && response !== null && 'series' in response.data && response.data.series.length>0) {\r\n                            this.GestorBar = {... constructor_barchart(response.data.series, response.data.categories)}\r\n                            localStorage.setItem('diary_manager_provision', JSON.stringify(response));\r\n                            this.GestorDate = this.formatearHora(response.data.date)\r\n                        }\r\n                        else{\r\n                            const currentData = JSON.parse(localStorage.getItem('diary_manager_provision')); // Convertir los datos del usuario a JSON\r\n                            if(currentData){\r\n                                this.GestorBar = {... constructor_barchart(currentData.data.series, currentData.data.categories)}\r\n                                this.GestorDate = this.formatearHora(currentData.data.date)\r\n                            }\r\n                            else{\r\n                                this.GestorBar = {... constructor_barchart([],[])}\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n                else{\r\n                    this.GestorBar = {... constructor_barchart([],[])}\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        },\r\n        async getTableSup(){\r\n            try {\r\n                if(this.ciudadId3 != null){\r\n                    this.$nextTick(async () => {\r\n                        const TIMEOUT_MS = 4000; // Tiempo de espera en milisegundos\r\n                        const responsePromise = this.$http.get(this.$apiURL + 'provision/childhoodbreakdownsmanagers/'+this.ciudadId3);\r\n                        const timeoutPromise = new Promise((resolve) => setTimeout(resolve, TIMEOUT_MS));\r\n                        const response = await Promise.race([responsePromise, timeoutPromise]);\r\n                        this.tableDataSup.splice(0, this.tableDataSup.length);\r\n                        this.fieldsSup.splice(0, this.fieldsSup.length);\r\n                        if (response && response !== null && 'series' in response.data && response.data.series.length>0) {\r\n                            response.data.series.map(i => this.tableDataSup.push({ ...i }));\r\n                            response.data.fields.map(i => this.fieldsSup.push({ key: i, sortable : true }));\r\n                            this.totalRowsSup = this.tableDataSup.length;\r\n                            localStorage.setItem('installation_manager_provision', JSON.stringify(response));\r\n                            this.SupDate = this.formatearHora(response.data.date)\r\n                        }\r\n                        else{\r\n                            const currentData = JSON.parse(localStorage.getItem('installation_manager_provision')); // Convertir los datos del usuario a JSON\r\n                            if(currentData){\r\n                                currentData.data.series.map(i => this.tableDataSup.push({ ...i }));\r\n                                currentData.data.fields.map(i => this.fieldsSup.push({ key: i, sortable : true }));\r\n                                this.totalRowsSup = this.tableDataSup.length;\r\n                                this.SupDate = this.formatearHora(currentData.data.date)\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        },\r\n        async getTableTec(){\r\n            try {\r\n                if(this.ciudadId4 != null){\r\n                    this.$nextTick(async () => { \r\n                        const TIMEOUT_MS = 4000; // Tiempo de espera en milisegundos\r\n                        const responsePromise = this.$http.get(this.$apiURL + 'provision/childhoodbreakdownstechnicians/'+this.ciudadId4);\r\n                        const timeoutPromise = new Promise((resolve) => setTimeout(resolve, TIMEOUT_MS));\r\n                        const response = await Promise.race([responsePromise, timeoutPromise]);\r\n                        this.tableDataTec.splice(0, this.tableDataTec.length);\r\n                        this.fieldsTec.splice(0, this.fieldsTec.length);\r\n                        console.log(response)\r\n                        if (response && response !== null && 'series' in response.data && response.data.series.length>0) {\r\n                            response.data.series.map(i => this.tableDataTec.push({ ...i }));\r\n                            response.data.fields.map(i => this.fieldsTec.push({ key: i, sortable : true }));\r\n                            this.totalRowsTec = this.tableDataTec.length;\r\n                            localStorage.setItem('childhood_table', JSON.stringify(response));\r\n                            this.TecDate = this.formatearHora(response.data.date)\r\n                        }\r\n                        else{\r\n                            const currentData = JSON.parse(localStorage.getItem('childhood_table')); // Convertir los datos del usuario a JSON\r\n                            if(currentData){\r\n                                currentData.data.series.map(i => this.tableDataTec.push({ ...i }));\r\n                                currentData.data.fields.map(i => this.fieldsTec.push({ key: i, sortable : true }));\r\n                                this.totalRowsTec = this.tableDataTec.length;\r\n                                this.TecDate = this.formatearHora(currentData.data.date)\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        },\r\n        async getCity(){\r\n            try {\r\n                const TIMEOUT_MS = 4000; // Tiempo de espera en milisegundos\r\n                const responsePromise = this.$http.get(this.$apiURL + 'city/all');\r\n                const timeoutPromise = new Promise((resolve) => setTimeout(resolve, TIMEOUT_MS));\r\n                const response = await Promise.race([responsePromise, timeoutPromise]);\r\n                if (response && response.data.data) {\r\n                    response.data.data.forEach(city => this.Ciudades.push(city.name));\r\n                    this.ciudadId1 = this.Ciudades[0];\r\n                    this.ciudadId2 = this.Ciudades[0];\r\n                    this.ciudadId3 = this.Ciudades[0];\r\n                    this.ciudadId4 = this.Ciudades[0];\r\n                } else {\r\n                    this.ciudadId = \"Lima\";\r\n                    this.ciudadId2 = \"Lima\";\r\n                    this.ciudadId3 = \"Lima\";\r\n                    this.ciudadId4 = \"Lima\";\r\n                }\r\n                this.getTableTec();\r\n                this.getContrata();\r\n                this.getGestor();\r\n                this.getTableSup();\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        },\r\n    },\r\n    middleware: \"authentication\"\r\n};\r\n</script>\r\n\r\n<template>\r\n<Layout>\r\n    <PageHeader :title=\"title\" :items=\"items\" />\r\n    <BRow>\r\n        <BCol lg=\"6\">\r\n            <BCard no-body>\r\n                <BCardHeader style=\"padding: 1em; background-color: #5b73e8;color : #ffff !important\">\r\n                    <BRow>\r\n                        <BCol sm=\"7\">\r\n                            <i class=\"bx bx-check-circle\"></i>&nbsp;&nbsp;&nbsp;Cumplimiento agenda - Contrata\r\n                        </BCol>\r\n                        <BCol sm=\"5\">\r\n                            Actualizado a las {{ ContrataDate }}\r\n                        </BCol>\r\n                    </BRow>\r\n                </BCardHeader>\r\n                <BCardBody>\r\n                    <BRow>\r\n                        <BCol cols=\"7\">\r\n\r\n                        </BCol>\r\n                        <BCol cols=\"5\">\r\n                            Filtrar por:\r\n                            <BFormSelect\r\n                                v-model=\"ciudadId1\"\r\n                                size=\"sm\"\r\n                                :options=\"Ciudades\"\r\n                                @change=\"getContrata()\"\r\n                            ></BFormSelect>\r\n                        </BCol>\r\n                    </BRow>\r\n                    <!-- Bar Chart -->\r\n                    <apexchart\r\n                        class=\"apex-charts\"\r\n                        height=\"350\"\r\n                        type=\"bar\"\r\n                        dir=\"ltr\"\r\n                        :series=\"ContrataBar.series\"\r\n                        :options=\"ContrataBar.chartOptions\"\r\n                    ></apexchart>\r\n                </BCardBody>\r\n            </BCard>\r\n        </BCol>\r\n        <BCol lg=\"6\">\r\n            <BCard no-body>\r\n                <BCardHeader style=\"padding: 1em; background-color: #5b73e8;color : #ffff !important\">\r\n                    <BRow>\r\n                        <BCol sm=\"7\">\r\n                            <i class=\"bx bx-check-circle\"></i>&nbsp;&nbsp;&nbsp;Cumplimiento agenda - Gestor\r\n                        </BCol>\r\n                        <BCol sm=\"5\">\r\n                            Actualizado a las {{ GestorDate }}\r\n                        </BCol>\r\n                    </BRow>\r\n                </BCardHeader>\r\n                <BCardBody>\r\n                    <BRow>\r\n                        <BCol cols=\"7\">\r\n\r\n                        </BCol>\r\n                        <BCol cols=\"5\">\r\n                            Filtrar por:\r\n                            <BFormSelect\r\n                                v-model=\"ciudadId2\"\r\n                                size=\"sm\"\r\n                                :options=\"Ciudades\"\r\n                                @change=\"getGestor()\"\r\n                            ></BFormSelect>\r\n                        </BCol>\r\n                    </BRow>\r\n                    <!-- Bar Chart -->\r\n                    <apexchart\r\n                        class=\"apex-charts\"\r\n                        height=\"350\"\r\n                        type=\"bar\"\r\n                        dir=\"ltr\"\r\n                        :series=\"GestorBar.series\"\r\n                        :options=\"GestorBar.chartOptions\"\r\n                    ></apexchart>\r\n                </BCardBody>\r\n            </BCard>\r\n        </BCol>\r\n        <BCol lg=\"12\">\r\n            <BCard no-body>\r\n                <BCardHeader style=\"padding: 1em; background-color: #5b73e8;color : #ffff !important\">\r\n                    <BRow>\r\n                        <BCol sm=\"7\">\r\n                            <i class=\"bx bx-check-circle\"></i>&nbsp;&nbsp;&nbsp;Averías de infancia - Sup\r\n                        </BCol>\r\n                        <BCol sm=\"5\">\r\n                            Actualizado a las {{ SupDate }}\r\n                        </BCol>\r\n                    </BRow>\r\n                </BCardHeader>\r\n                <BCardBody>\r\n                    <BRow>\r\n                        <BCol cols=\"7\">\r\n\r\n                        </BCol>\r\n                        <BCol cols=\"5\">\r\n                            Filtrar por:\r\n                            <BFormSelect\r\n                                v-model=\"ciudadId3\"\r\n                                size=\"sm\"\r\n                                :options=\"Ciudades\"\r\n                                @change=\"getTableSup()\"\r\n                            ></BFormSelect>\r\n                        </BCol>\r\n                    </BRow>\r\n                    <!-- Table -->\r\n                    <div class=\"table-responsive mb-0\">\r\n                        <BTable\r\n                            :items=\"tableDataSup\"\r\n                            :fields=\"fieldsSup\"\r\n                            responsive=\"sm\"\r\n                            :per-page=\"perPageSup\"\r\n                            :current-page=\"currentPageSup\"\r\n                            :sort-by.sync=\"sortBySup\"\r\n                            :sort-desc.sync=\"sortDescSup\"\r\n                            :filter=\"filterSup\"\r\n                            :filter-included-fields=\"filterOnSup\"\r\n                            @filtered=\"onFilteredSup\"\r\n                        >                    \r\n                    </BTable>\r\n                    </div>                    \r\n                </BCardBody>\r\n            </BCard>\r\n        </BCol>\r\n        <BCol lg=\"12\">\r\n            <BCard no-body>\r\n                <BCardHeader style=\"padding: 1em; background-color: #5b73e8;color : #ffff !important\">\r\n                    <BRow>\r\n                        <BCol sm=\"7\">\r\n                            <i class=\"bx bx-check-circle\"></i>&nbsp;&nbsp;&nbsp;Averías de infancia - Tec\r\n                        </BCol>\r\n                        <BCol sm=\"5\">\r\n                            Actualizado a las {{ TecDate }}\r\n                        </BCol>\r\n                    </BRow>\r\n                </BCardHeader>\r\n                <BCardBody>\r\n                    <BRow>\r\n                        <BCol cols=\"7\">\r\n\r\n                        </BCol>\r\n                        <BCol cols=\"5\">\r\n                            Filtrar por:\r\n                            <BFormSelect\r\n                                v-model=\"ciudadId4\"\r\n                                size=\"sm\"\r\n                                :options=\"Ciudades\"\r\n                                @change=\"getTableTec()\"\r\n                            ></BFormSelect>\r\n                        </BCol>\r\n                    </BRow>\r\n                    <!-- Table -->\r\n                    <div class=\"table-responsive mb-0\">\r\n                        <BTable\r\n                            :items=\"tableDataTec\"\r\n                            :fields=\"fieldsTec\"\r\n                            responsive=\"sm\"\r\n                            :per-page=\"perPageTec\"\r\n                            :current-page=\"currentPageTec\"\r\n                            :sort-by.sync=\"sortByTec\"\r\n                            :sort-desc.sync=\"sortDescTec\"\r\n                            :filter=\"filterTec\"\r\n                            :filter-included-fields=\"filterOnTec\"\r\n                            @filtered=\"onFilteredTec\"\r\n                        >                    \r\n                        </BTable>\r\n                    </div>                \r\n                </BCardBody>\r\n            </BCard>\r\n        </BCol>\r\n    </BRow>\r\n</Layout>\r\n</template>\r\n","import { render } from \"./index.vue?vue&type=template&id=70874a94\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["constructor_chart","data_series","data_categories","columnChartAux","series","chartOptions","chart","toolbar","show","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","position","enabled","offsetY","style","fontSize","colors","stroke","width","xaxis","categories","yaxis","title","text","grid","borderColor","fill","opacity","constructor_piechart","colors_pie","pie_chart","labels","legend","horizontalAlign","verticalAlign","floating","offsetX","responsive","breakpoint","options","height","pie","offset","constructor_barchart","bar_chart","data","distributed","constructor_donutchart","total","Number","reduce","sum","value","toFixed","index","length","element","push","donutChart","formatter","val","opts","w","config","seriesIndex","fontweight","donut","label","_createElementVNode","class","_createBlock","_component_Layout","default","_withCtx","_createVNode","_component_PageHeader","$data","items","_component_BRow","_component_BCol","lg","_component_BCard","_component_BCardHeader","sm","_hoisted_1","_createTextVNode","_","_toDisplayString","ContrataDate","_component_BCardBody","cols","_component_BFormSelect","modelValue","ciudadId1","_cache","$event","size","Ciudades","onChange","$options","getContrata","_component_apexchart","type","dir","ContrataBar","_hoisted_2","GestorDate","ciudadId2","getGestor","GestorBar","_hoisted_3","SupDate","ciudadId3","getTableSup","_hoisted_4","_component_BTable","tableDataSup","fields","fieldsSup","perPageSup","currentPageSup","sortBySup","sortDescSup","filter","filterSup","filterOnSup","onFiltered","onFilteredSup","_hoisted_5","TecDate","ciudadId4","getTableTec","_hoisted_6","tableDataTec","fieldsTec","perPageTec","currentPageTec","sortByTec","sortDescTec","filterTec","filterOnTec","onFilteredTec","components","Layout","PageHeader","GestorAgenda","GestorOrdenes","GestorAgendaId","GestorOrdenId","ciudades_form","totalRowsSup","pageOptionsSup","totalesSup","totalRowsTec","pageOptionsTec","totalesTec","mounted","this","getCity","methods","formatearHora","date","moment","isValid","format","filteredItems","$nextTick","async","TIMEOUT_MS","responsePromise","$http","get","$apiURL","timeoutPromise","Promise","resolve","setTimeout","response","race","console","log","localStorage","setItem","JSON","stringify","currentData","parse","getItem","error","splice","map","i","key","sortable","forEach","city","name","ciudadId","middleware","__exports__","render"],"sourceRoot":""}